{
  "name": "ButtonBase",
  "props": {
    "action": {
      "description": "A ref for imperative actions. It currently only supports focusVisible() action.",
      "description_zh": "命令式操作的引用。它目前仅支持 focusVisible（） 操作。",
      "default": "-",
      "value": "",
      "type": "ref",
      "required": false
    },
    "centerRipple": {
      "description": "If true, the ripples are centered. They won't start at the cursor interaction position.",
      "description_zh": "如果为 true，则纹波位于中心。它们不会从光标交互位置开始。",
      "default": "false",
      "value": "",
      "type": "bool",
      "required": false
    },
    "children": {
      "description": "The content of the component.",
      "description_zh": "组件的内容。",
      "default": "-",
      "value": "",
      "type": "node",
      "required": false
    },
    "classes": {
      "description": "Override or extend the styles applied to the component.See CSS classes API below for more details.",
      "description_zh": "覆盖或扩展应用于组件的样式。有关详细信息，请参阅下面的 CSS 类 API。",
      "default": "-",
      "value": "",
      "type": "object",
      "required": false
    },
    "component": {
      "description": "The component used for the root node. Either a string to use a HTML element or a component.This needs to be able to hold a ref.",
      "description_zh": "用于根节点的组件。使用 HTML 元素或组件的字符串。这需要能够保存一个 ref。",
      "default": "-",
      "value": "",
      "type": "element type",
      "required": false
    },
    "disabled": {
      "description": "If true, the component is disabled.",
      "description_zh": "如果为 true，则禁用该组件。",
      "default": "false",
      "value": "",
      "type": "bool",
      "required": false
    },
    "disableRipple": {
      "description": "If true, the ripple effect is disabled.⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure to highlight the element by applying separate styles with the .Mui-focusVisible class.",
      "description_zh": "如果为 true，则禁用涟漪效应。 ⚠️ 如果没有涟漪，则默认情况下没有 ：focus-visible 的样式。请务必通过使用 应用单独的样式来突出显示元素。Mui-focusVisible 类。",
      "default": "false",
      "value": "",
      "type": "bool",
      "required": false
    },
    "disableTouchRipple": {
      "description": "If true, the touch ripple effect is disabled.",
      "description_zh": "如果为 true，则禁用触摸波纹效果。",
      "default": "false",
      "value": "",
      "type": "bool",
      "required": false
    },
    "focusRipple": {
      "description": "If true, the base button will have a keyboard focus ripple.",
      "description_zh": "如果为 true，则基本按钮将具有键盘焦点波纹。",
      "default": "false",
      "value": "",
      "type": "bool",
      "required": false
    },
    "focusVisibleClassName": {
      "description": "This prop can help identify which element has keyboard focus. The class name will be applied when the element gains the focus through keyboard interaction. It's a polyfill for the CSS :focus-visible selector. The rationale for using this feature is explained here. A polyfill can be used to apply a focus-visible class to other components if needed.",
      "description_zh": "此道具可以帮助识别哪个元素具有键盘焦点。当元素通过键盘交互获得焦点时，将应用类名。它是 CSS ：focus-visible 选择器的 polyfill。此处解释了使用此功能的基本原理。如果需要，可以使用 polyfill 将焦点可见类应用于其他组件。",
      "default": "-",
      "value": "",
      "type": "string",
      "required": false
    },
    "LinkComponent": {
      "description": "The component used to render a link when the href prop is provided.",
      "description_zh": "用于在提供 href prop 时呈现链接的组件。",
      "default": "a",
      "value": "",
      "type": "elementType",
      "required": false
    },
    "onFocusVisible": {
      "description": "Callback fired when the component is focused with a keyboard. We trigger a onFocus callback too.",
      "description_zh": "当组件使用键盘聚焦时触发回调。我们还触发了 onFocus 回调。",
      "default": "-",
      "value": "",
      "type": "func",
      "required": false
    },
    "sx": {
      "description": "The system prop that allows defining system overrides as well as additional CSS styles.See the `sx` page for more details.",
      "description_zh": "允许定义系统覆盖以及其他 CSS 样式的系统属性。有关更多详细信息，请参阅“sx”页面。",
      "default": "-",
      "value": "",
      "type": "Array<func| object| bool>| func| object",
      "required": false
    },
    "TouchRippleProps": {
      "description": "Props applied to the TouchRipple element.",
      "description_zh": "应用于 TouchRipple 元素的道具。",
      "default": "-",
      "value": "",
      "type": "object",
      "required": false
    },
    "touchRippleRef": {
      "description": "A ref that points to the TouchRipple element.",
      "description_zh": "指向 TouchRipple 元素的引用。",
      "default": "-",
      "value": "",
      "type": "func| { current?: { pulsate: func, start: func, stop: func } }",
      "required": false
    }
  },
  "link": "https://mui.com/material-ui/api/button-base/",
  "link_zh": "https://mui.com/material-ui/api/button-base/",
  "typeDetail": {},
  "events": [
    {
      "name": "onFocusVisible",
      "description": "Callback fired when the component is focused with a keyboard. We trigger a  callback too.",
      "description_zh": "当组件使用键盘聚焦时触发回调。我们也会触发回调。",
      "params": "onFocus",
      "value": ""
    }
  ],
  "methods": [],
  "slots": [],
  "suggestions": [],
  "filename": "ButtonBase"
}
