{
  "name": "Slider",
  "props": {
    "aria-label": {
      "description": "The label of the slider.",
      "description_zh": "滑块的标签。",
      "default": "-",
      "value": "",
      "type": "string",
      "required": false
    },
    "aria-labelledby": {
      "description": "The id of the element containing a label for the slider.",
      "description_zh": "包含滑块标签的元素的 ID。",
      "default": "-",
      "value": "",
      "type": "string",
      "required": false
    },
    "aria-valuetext": {
      "description": "A string value that provides a user-friendly name for the current value of the slider.",
      "description_zh": "一个字符串值，该值为滑块的当前值提供用户友好的名称。",
      "default": "-",
      "value": "",
      "type": "string",
      "required": false
    },
    "classes": {
      "description": "Override or extend the styles applied to the component.See CSS classes API below for more details.",
      "description_zh": "覆盖或扩展应用于组件的样式。有关详细信息，请参阅下面的 CSS 类 API。",
      "default": "-",
      "value": "",
      "type": "object",
      "required": false
    },
    "color": {
      "description": "The color of the component. It supports both default and custom theme colors, which can be added as shown in the palette customization guide.",
      "description_zh": "组件的颜色。它支持默认和自定义主题颜色，可以按照调色板自定义指南中所示进行添加。",
      "default": "primary",
      "value": "",
      "type": "primary| secondary| error| info| success| warning| string",
      "required": false
    },
    "components": {
      "description": "The components used for each slot inside.Deprecated - use the slots prop instead. This prop will be removed in v7. How to migrate.",
      "description_zh": "内部每个插槽使用的组件。已弃用 - 请改用插槽道具。这个道具将在 v7 中被移除。如何迁移。",
      "default": "{}",
      "value": "",
      "type": "{ Input?: elementType, Mark?: elementType, MarkLabel?: elementType, Rail?: elementType, Root?: elementType, Thumb?: elementType, Track?: elementType, ValueLabel?: elementType }",
      "required": false
    },
    "componentsProps": {
      "description": "The extra props for the slot components. You can override the existing props or add new ones.Deprecated - use the slotProps prop instead. This prop will be removed in v7. How to migrate.",
      "description_zh": "插槽组件的额外道具。您可以覆盖现有道具或添加新道具。已弃用 - 改用 slotProps 道具。这个道具将在 v7 中被移除。如何迁移。",
      "default": "{}",
      "value": "",
      "type": "{ input?: func| object, mark?: func| object, markLabel?: func| object, rail?: func| object, root?: func| object, thumb?: func| object, track?: func| object, valueLabel?: func| { children?: element, className?: string, open?: bool, style?: object, value?: number, valueLabelDisplay?: auto| off| on } }",
      "required": false
    },
    "defaultValue": {
      "description": "The default value. Use when the component is not controlled.",
      "description_zh": "默认值。在组件不受控制时使用。",
      "default": "-",
      "value": "",
      "type": "Array<number>| number",
      "required": false
    },
    "disabled": {
      "description": "If true, the component is disabled.",
      "description_zh": "如果为 true，则禁用该组件。",
      "default": "false",
      "value": "",
      "type": "bool",
      "required": false
    },
    "disableSwap": {
      "description": "If true, the active thumb doesn't swap when moving pointer over a thumb while dragging another thumb.",
      "description_zh": "如果为 true，则在拖动另一个拇指的同时将指针移到一个拇指上时，活动拇指不会交换。",
      "default": "false",
      "value": "",
      "type": "bool",
      "required": false
    },
    "getAriaLabel": {
      "description": "Accepts a function which returns a string value that provides a user-friendly name for the thumb labels of the slider. This is important for screen reader users.Signature:function(index: number) => stringindex The thumb label's index to format.",
      "description_zh": "接受一个函数，该函数返回一个字符串值，该值为滑块的拇指标签提供用户友好的名称。这对屏幕阅读器用户很重要。Signature：function（index： number） => stringindex 拇指标签的格式索引。",
      "default": "-",
      "value": "",
      "type": "func",
      "required": false
    },
    "getAriaValueText": {
      "description": "Accepts a function which returns a string value that provides a user-friendly name for the current value of the slider. This is important for screen reader users.Signature:function(value: number, index: number) => stringvalue The thumb label's value to format.index The thumb label's index to format.",
      "description_zh": "接受一个函数，该函数返回一个字符串值，该值为滑块的当前值提供用户友好的名称。这对屏幕阅读器用户很重要。Signature：function（value： number， index： number） => stringvalue thumb label's value to format.index 的 thumb label's index to format.",
      "default": "-",
      "value": "",
      "type": "func",
      "required": false
    },
    "marks": {
      "description": "Marks indicate predetermined values to which the user can move the slider. If true the marks are spaced according the value of the step prop. If an array, it should contain objects with value and an optional label keys.",
      "description_zh": "标记表示用户可以将滑块移动到的预定值。如果为 true，则根据阶梯属性的值间隔标记。如果是数组，则应包含具有值的对象和可选的标签键。",
      "default": "false",
      "value": "",
      "type": "Array<{ label?: node, value: number }>| bool",
      "required": false
    },
    "max": {
      "description": "The maximum allowed value of the slider. Should not be equal to min.",
      "description_zh": "滑块的最大允许值。不应等于 min。",
      "default": "100",
      "value": "",
      "type": "number",
      "required": false
    },
    "min": {
      "description": "The minimum allowed value of the slider. Should not be equal to max.",
      "description_zh": "滑块的最小允许值。不应等于 max。",
      "default": "0",
      "value": "",
      "type": "number",
      "required": false
    },
    "name": {
      "description": "Name attribute of the hidden input element.",
      "description_zh": "隐藏输入元素的 Name 属性。",
      "default": "-",
      "value": "",
      "type": "string",
      "required": false
    },
    "onChange": {
      "description": "Callback function that is fired when the slider's value changed.Signature:function(event: Event, value: number | Array, activeThumb: number) => voidevent The event source of the callback. You can pull out the new value by accessing event.target.value (any). Warning: This is a generic event not a change event.value The new value.activeThumb Index of the currently moved thumb.",
      "description_zh": "当滑块的值更改时触发的回调函数。签名：function（event： Event， value： number |Array， activeThumb： number） => voidevent 回调的事件源。您可以通过访问 event.target.value （any） 来提取新值。警告：这是一个通用事件，而不是更改 event.value 当前移动的拇指的新 value.activeThumb 索引。",
      "default": "-",
      "value": "",
      "type": "func",
      "required": false
    },
    "onChangeCommitted": {
      "description": "Callback function that is fired when the mouseup is triggered.Signature:function(event: React.SyntheticEvent | Event, value: number | Array) => voidevent The event source of the callback. Warning: This is a generic event not a change event.value The new value.",
      "description_zh": "触发鼠标时触发的回调函数。签名：function（event： React.SyntheticEvent |事件，值：数字 |Array） => voidevent 回调的事件源。警告：这是一个通用事件，而不是更改 event.value 新值。",
      "default": "-",
      "value": "",
      "type": "func",
      "required": false
    },
    "orientation": {
      "description": "The component orientation.",
      "description_zh": "组件方向。",
      "default": "horizontal",
      "value": "",
      "type": "horizontal| vertical",
      "required": false
    },
    "scale": {
      "description": "A transformation function, to change the scale of the slider.Signature:function(x: any) => any",
      "description_zh": "一个变换函数，用于更改滑块的比例。签名：function（x： any） => any",
      "default": "function Identity(x) {\n  return x;\n}",
      "value": "",
      "type": "func",
      "required": false
    },
    "shiftStep": {
      "description": "The granularity with which the slider can step through values when using Page Up/Page Down or Shift + Arrow Up/Arrow Down.",
      "description_zh": "使用“向上翻页/向下翻页”或“向上移动 + 向上箭头/向下箭头”时滑块可以单步执行值的粒度。",
      "default": "10",
      "value": "",
      "type": "number",
      "required": false
    },
    "size": {
      "description": "The size of the slider.",
      "description_zh": "滑块的大小。",
      "default": "medium",
      "value": "",
      "type": "small| medium| string",
      "required": false
    },
    "slotProps": {
      "description": "The props used for each slot inside the Slider.",
      "description_zh": "用于滑块内每个插槽的道具。",
      "default": "{}",
      "value": "",
      "type": "{ input?: func| object, mark?: func| object, markLabel?: func| object, rail?: func| object, root?: func| object, thumb?: func| object, track?: func| object, valueLabel?: func| { children?: element, className?: string, open?: bool, style?: object, value?: number, valueLabelDisplay?: auto| off| on } }",
      "required": false
    },
    "slots": {
      "description": "The components used for each slot inside the Slider. Either a string to use a HTML element or a component.",
      "description_zh": "用于滑块内每个插槽的组件。使用 HTML 元素或组件的字符串。",
      "default": "{}",
      "value": "",
      "type": "{ input?: elementType, mark?: elementType, markLabel?: elementType, rail?: elementType, root?: elementType, thumb?: elementType, track?: elementType, valueLabel?: elementType }",
      "required": false
    },
    "step": {
      "description": "The granularity with which the slider can step through values. (A \"discrete\" slider.) The min prop serves as the origin for the valid values. We recommend (max - min) to be evenly divisible by the step.When step is null, the thumb can only be slid onto marks provided with the marks prop.",
      "description_zh": "滑块可以单步执行值的粒度。（“离散”滑块。min 属性用作有效值的原点。我们建议 （max - min） 可以被步长整除。当 step 为 null 时，拇指只能滑动到标记道具提供的标记上。",
      "default": "1",
      "value": "",
      "type": "number",
      "required": false
    },
    "sx": {
      "description": "The system prop that allows defining system overrides as well as additional CSS styles.See the `sx` page for more details.",
      "description_zh": "允许定义系统覆盖以及其他 CSS 样式的系统属性。有关更多详细信息，请参阅“sx”页面。",
      "default": "-",
      "value": "",
      "type": "Array<func| object| bool>| func| object",
      "required": false
    },
    "tabIndex": {
      "description": "Tab index attribute of the hidden input element.",
      "description_zh": "隐藏输入元素的 Tab 索引属性。",
      "default": "-",
      "value": "",
      "type": "number",
      "required": false
    },
    "track": {
      "description": "The track presentation:\n\nnormal the track will render a bar representing the slider value.\ninverted the track will render a bar representing the remaining slider value.\nfalse the track will render without a bar.\n\n",
      "description_zh": "赛道介绍：\n\n正常情况下，轨道将呈现一个表示滑块值的条形图。\n倒置的轨道将呈现一个表示剩余滑块值的条形图。\nfalse 轨道将在没有条形图的情况下呈现。",
      "default": "normal",
      "value": "",
      "type": "inverted| normal| false",
      "required": false
    },
    "value": {
      "description": "The value of the slider. For ranged sliders, provide an array with two values.",
      "description_zh": "滑块的值。对于范围滑块，请提供一个包含两个值的数组。",
      "default": "-",
      "value": "",
      "type": "Array<number>| number",
      "required": false
    },
    "valueLabelDisplay": {
      "description": "Controls when the value label is displayed:\n\nauto the value label will display when the thumb is hovered or focused.\non will display persistently.\noff will never display.\n\n",
      "description_zh": "控制值标签的显示时间：\n\n自动 当拇指悬停或聚焦时，将显示值标签。\non 将持续显示。\n关闭将永远不会显示。",
      "default": "off",
      "value": "",
      "type": "auto| off| on",
      "required": false
    },
    "valueLabelFormat": {
      "description": "The format function the value label's value.When a function is provided, it should have the following signature:- {number} value The value label's value to format - {number} index The value label's index to format",
      "description_zh": "format 函数为值标签的值。提供函数时，它应具有以下签名：- {number} value 要格式化的值标签的值 - {number} index 要格式化的值标签的索引",
      "default": "function Identity(x) {\n  return x;\n}",
      "value": "",
      "type": "func| string",
      "required": false
    }
  },
  "link": "https://mui.com/material-ui/api/slider/",
  "link_zh": "https://mui.com/material-ui/api/slider/",
  "typeDetail": {},
  "events": [
    {
      "name": "onChange",
      "description": "Callback function that is fired when the slider's value changed.Signature:event The event source of the callback. You can pull out the new value by accessing event.target.value (any). Warning: This is a generic event not a change event.value The new value.activeThumb Index of the currently moved thumb.",
      "description_zh": "当滑块的值更改时触发的回调函数。Signature：event 回调的事件源。您可以通过访问 event.target.value （any） 来提取新值。警告：这是一个通用事件，而不是更改 event.value 当前移动的拇指的新 value.activeThumb 索引。",
      "params": "function(event: Event, value: number | Array, activeThumb: number) => void",
      "value": ""
    },
    {
      "name": "onChangeCommitted",
      "description": "Callback function that is fired when the  is triggered.Signature:function(event: React.SyntheticEvent | Event, value: number | Array) => voidevent The event source of the callback. Warning: This is a generic event not a change event.value The new value.",
      "description_zh": "触发时触发的回调函数。签名：function（event： React.SyntheticEvent |事件，值：数字 |Array） => voidevent 回调的事件源。警告：这是一个通用事件，而不是更改 event.value 新值。",
      "params": "mouseup",
      "value": ""
    }
  ],
  "methods": [],
  "slots": [],
  "suggestions": [],
  "filename": "Slider"
}
