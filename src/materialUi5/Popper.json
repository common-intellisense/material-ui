{
  "name": "Popper",
  "props": {
    "open": {
      "description": "If true, the component is shown.",
      "description_zh": "如果为 true，则显示组件。",
      "default": "-",
      "value": "",
      "type": "bool",
      "required": true
    },
    "anchorEl": {
      "description": "An HTML element, virtualElement, or a function that returns either. It's used to set the position of the popper. The return value will passed as the reference object of the Popper instance.",
      "description_zh": "一个 HTML 元素、virtualElement 或返回任一元素的函数。它用于设置爆裂器的位置。返回值将作为 Popper 实例的引用对象传递。",
      "default": "-",
      "value": "",
      "type": "HTML element| object| func",
      "required": false
    },
    "children": {
      "description": "Popper render function or node.",
      "description_zh": "Popper 渲染函数或节点。",
      "default": "-",
      "value": "",
      "type": "node| func",
      "required": false
    },
    "component": {
      "description": "The component used for the root node. Either a string to use a HTML element or a component.",
      "description_zh": "用于根节点的组件。使用 HTML 元素或组件的字符串。",
      "default": "-",
      "value": "",
      "type": "elementType",
      "required": false
    },
    "components": {
      "description": "The components used for each slot inside the Popper. Either a string to use a HTML element or a component.",
      "description_zh": "Popper 内每个插槽使用的组件。使用 HTML 元素或组件的字符串。",
      "default": "{}",
      "value": "",
      "type": "{ Root?: elementType }",
      "required": false
    },
    "componentsProps": {
      "description": "The props used for each slot inside the Popper.",
      "description_zh": "波普尔内部每个插槽使用的道具。",
      "default": "{}",
      "value": "",
      "type": "{ root?: func| object }",
      "required": false
    },
    "container": {
      "description": "An HTML element or function that returns one. The container will have the portal children appended to it.You can also provide a callback, which is called in a React layout effect. This lets you set the container from a ref, and also makes server-side rendering possible.By default, it uses the body of the top-level document object, so it's simply document.body most of the time.",
      "description_zh": "一个 HTML 元素或函数，返回一个。容器将附加门户子项。您还可以提供回调，该回调在 React 布局效果中调用。这允许您从 ref 设置容器，并且还可以进行服务器端渲染。默认情况下，它使用顶级文档对象的正文，因此大多数时候它只是 document.body。",
      "default": "-",
      "value": "",
      "type": "HTML element| func",
      "required": false
    },
    "disablePortal": {
      "description": "The children will be under the DOM hierarchy of the parent component.",
      "description_zh": "子组件将位于父组件的 DOM 层次结构下。",
      "default": "false",
      "value": "",
      "type": "bool",
      "required": false
    },
    "keepMounted": {
      "description": "Always keep the children in the DOM. This prop can be useful in SEO situation or when you want to maximize the responsiveness of the Popper.",
      "description_zh": "始终将孩子留在 DOM 中。这个道具在SEO情况下很有用，或者当你想最大限度地提高Popper的响应能力时。",
      "default": "false",
      "value": "",
      "type": "bool",
      "required": false
    },
    "modifiers": {
      "description": "Popper.js is based on a \"plugin-like\" architecture, most of its features are fully encapsulated \"modifiers\".A modifier is a function that is called each time Popper.js needs to compute the position of the popper. For this reason, modifiers should be very performant to avoid bottlenecks. To learn how to create a modifier, read the modifiers documentation.",
      "description_zh": "Popper.js基于“类似插件”的架构，但其大部分功能都是完全封装的“修饰符”。修饰符是每次需要计算波普尔位置时调用Popper.js函数。出于这个原因，修饰符应该非常高性能，以避免瓶颈。要了解如何创建修饰符，请阅读修饰符文档。",
      "default": "-",
      "value": "",
      "type": "Array<{ data?: object, effect?: func, enabled?: bool, fn?: func, name?: any, options?: object, phase?: afterMain| afterRead| afterWrite| beforeMain| beforeRead| beforeWrite| main| read| write, requires?: Array<string>, requiresIfExists?: Array<string> }>",
      "required": false
    },
    "placement": {
      "description": "Popper placement.",
      "description_zh": "波普尔放置。",
      "default": "bottom",
      "value": "",
      "type": "auto-end| auto-start| auto| bottom-end| bottom-start| bottom| left-end| left-start| left| right-end| right-start| right| top-end| top-start| top",
      "required": false
    },
    "popperOptions": {
      "description": "Options provided to the Popper.js instance.",
      "description_zh": "提供给Popper.js实例的选项。",
      "default": "{}",
      "value": "",
      "type": "{ modifiers?: array, onFirstUpdate?: func, placement?: auto-end| auto-start| auto| bottom-end| bottom-start| bottom| left-end| left-start| left| right-end| right-start| right| top-end| top-start| top, strategy?: absolute| fixed }",
      "required": false
    },
    "popperRef": {
      "description": "A ref that points to the used popper instance.",
      "description_zh": "指向使用的 popper 实例的 ref。",
      "default": "-",
      "value": "",
      "type": "ref",
      "required": false
    },
    "slotProps": {
      "description": "The props used for each slot inside the Popper.",
      "description_zh": "波普尔内部每个插槽使用的道具。",
      "default": "{}",
      "value": "",
      "type": "{ root?: func| object }",
      "required": false
    },
    "slots": {
      "description": "The components used for each slot inside the Popper. Either a string to use a HTML element or a component.",
      "description_zh": "Popper 内每个插槽使用的组件。使用 HTML 元素或组件的字符串。",
      "default": "{}",
      "value": "",
      "type": "{ root?: elementType }",
      "required": false
    },
    "sx": {
      "description": "The system prop that allows defining system overrides as well as additional CSS styles.See the `sx` page for more details.",
      "description_zh": "允许定义系统覆盖以及其他 CSS 样式的系统属性。有关更多详细信息，请参阅“sx”页面。",
      "default": "-",
      "value": "",
      "type": "Array<func| object| bool>| func| object",
      "required": false
    },
    "transition": {
      "description": "Help supporting a react-transition-group/Transition component.",
      "description_zh": "帮助支持 react-transition-group/Transition 组件。",
      "default": "false",
      "value": "",
      "type": "bool",
      "required": false
    }
  },
  "link": "https://mui.com/material-ui/api/popper/",
  "link_zh": "https://mui.com/material-ui/api/popper/",
  "typeDetail": {},
  "events": [],
  "methods": [],
  "slots": [],
  "suggestions": [],
  "filename": "Popper"
}
