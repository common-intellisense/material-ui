{
  "name": "Input",
  "props": {
    "autoComplete": {
      "description": "This prop helps users to fill forms faster, especially on mobile devices. The name can be confusing, as it's more like an autofill. You can learn more about it following the specification.",
      "description_zh": "此道具可帮助用户更快地填写表单，尤其是在移动设备上。这个名字可能会令人困惑，因为它更像是一个自动填充。您可以按照规范了解有关它的更多信息。",
      "default": "-",
      "value": "",
      "type": "string",
      "required": false
    },
    "autoFocus": {
      "description": "If true, the input element is focused during the first mount.",
      "description_zh": "如果为 true，则输入元素在第一次挂载期间聚焦。",
      "default": "-",
      "value": "",
      "type": "bool",
      "required": false
    },
    "classes": {
      "description": "Override or extend the styles applied to the component.See CSS classes API below for more details.",
      "description_zh": "覆盖或扩展应用于组件的样式。有关详细信息，请参阅下面的 CSS 类 API。",
      "default": "-",
      "value": "",
      "type": "object",
      "required": false
    },
    "color": {
      "description": "The color of the component. It supports both default and custom theme colors, which can be added as shown in the palette customization guide. The prop defaults to the value ('primary') inherited from the parent FormControl component.",
      "description_zh": "组件的颜色。它支持默认和自定义主题颜色，可以按照调色板自定义指南中所示进行添加。该 prop 默认为从父 FormControl 组件继承的值 （'primary'）。",
      "default": "-",
      "value": "",
      "type": "primary| secondary| string",
      "required": false
    },
    "components": {
      "description": "The components used for each slot inside.This prop is an alias for the slots prop. It's recommended to use the slots prop instead.",
      "description_zh": "内部每个插槽使用的组件。此道具是插槽道具的别名。建议改用插槽道具。",
      "default": "{}",
      "value": "",
      "type": "{ Input?: elementType, Root?: elementType }",
      "required": false
    },
    "componentsProps": {
      "description": "The extra props for the slot components. You can override the existing props or add new ones.This prop is an alias for the slotProps prop. It's recommended to use the slotProps prop instead, as componentsProps will be deprecated in the future.",
      "description_zh": "插槽组件的额外道具。您可以覆盖现有道具或添加新道具。此 prop 是 slotProps props 的别名。建议改用 slotProps prop，因为 componentsProps 将来会被弃用。",
      "default": "{}",
      "value": "",
      "type": "{ input?: object, root?: object }",
      "required": false
    },
    "defaultValue": {
      "description": "The default value. Use when the component is not controlled.",
      "description_zh": "默认值。在组件不受控制时使用。",
      "default": "-",
      "value": "",
      "type": "any",
      "required": false
    },
    "disabled": {
      "description": "If true, the component is disabled. The prop defaults to the value (false) inherited from the parent FormControl component.",
      "description_zh": "如果为 true，则禁用该组件。prop 默认为从父 FormControl 组件继承的值 （false）。",
      "default": "-",
      "value": "",
      "type": "bool",
      "required": false
    },
    "disableUnderline": {
      "description": "If true, the input will not have an underline.",
      "description_zh": "如果为 true，则输入将没有下划线。",
      "default": "-",
      "value": "",
      "type": "bool",
      "required": false
    },
    "endAdornment": {
      "description": "End InputAdornment for this component.",
      "description_zh": "此组件的 End InputAdornment。",
      "default": "-",
      "value": "",
      "type": "node",
      "required": false
    },
    "error": {
      "description": "If true, the input will indicate an error. The prop defaults to the value (false) inherited from the parent FormControl component.",
      "description_zh": "如果为 true，则输入将指示错误。prop 默认为从父 FormControl 组件继承的值 （false）。",
      "default": "-",
      "value": "",
      "type": "bool",
      "required": false
    },
    "fullWidth": {
      "description": "If true, the input will take up the full width of its container.",
      "description_zh": "如果为 true，则输入将占用其容器的整个宽度。",
      "default": "false",
      "value": "",
      "type": "bool",
      "required": false
    },
    "id": {
      "description": "The id of the input element.",
      "description_zh": "输入元素的 ID。",
      "default": "-",
      "value": "",
      "type": "string",
      "required": false
    },
    "inputComponent": {
      "description": "The component used for the input element. Either a string to use a HTML element or a component.",
      "description_zh": "用于输入元素的组件。使用 HTML 元素或组件的字符串。",
      "default": "input",
      "value": "",
      "type": "elementType",
      "required": false
    },
    "inputProps": {
      "description": "Attributes applied to the input element.",
      "description_zh": "应用于输入元素的属性。",
      "default": "{}",
      "value": "",
      "type": "object",
      "required": false
    },
    "inputRef": {
      "description": "Pass a ref to the input element.",
      "description_zh": "将 ref 传递给输入元素。",
      "default": "-",
      "value": "",
      "type": "ref",
      "required": false
    },
    "margin": {
      "description": "If dense, will adjust vertical spacing. This is normally obtained via context from FormControl. The prop defaults to the value ('none') inherited from the parent FormControl component.",
      "description_zh": "如果密集，将调整垂直间距。这通常是通过 FormControl 的上下文获取的。该 prop 默认为从父 FormControl 组件继承的值 （'none'）。",
      "default": "-",
      "value": "",
      "type": "dense| none",
      "required": false
    },
    "maxRows": {
      "description": "Maximum number of rows to display when multiline option is set to true.",
      "description_zh": "多行选项设置为 true 时显示的最大行数。",
      "default": "-",
      "value": "",
      "type": "number| string",
      "required": false
    },
    "minRows": {
      "description": "Minimum number of rows to display when multiline option is set to true.",
      "description_zh": "多行选项设置为 true 时要显示的最小行数。",
      "default": "-",
      "value": "",
      "type": "number| string",
      "required": false
    },
    "multiline": {
      "description": "If true, a TextareaAutosize element is rendered.",
      "description_zh": "如果为 true，则呈现 TextareaAutosize 元素。",
      "default": "false",
      "value": "",
      "type": "bool",
      "required": false
    },
    "name": {
      "description": "Name attribute of the input element.",
      "description_zh": "输入元素的 Name 属性。",
      "default": "-",
      "value": "",
      "type": "string",
      "required": false
    },
    "onChange": {
      "description": "Callback fired when the value is changed.Signature:function(event: React.ChangeEvent) => voidevent The event source of the callback. You can pull out the new value by accessing event.target.value (string).",
      "description_zh": "更改值时触发回调。Signature：function（event： React.ChangeEvent） => voidevent 回调的事件源。您可以通过访问 event.target.value（字符串）来提取新值。",
      "default": "-",
      "value": "",
      "type": "func",
      "required": false
    },
    "placeholder": {
      "description": "The short hint displayed in the input before the user enters a value.",
      "description_zh": "在用户输入值之前在输入中显示的简短提示。",
      "default": "-",
      "value": "",
      "type": "string",
      "required": false
    },
    "readOnly": {
      "description": "It prevents the user from changing the value of the field (not from interacting with the field).",
      "description_zh": "它阻止用户更改字段的值（而不是与字段交互）。",
      "default": "-",
      "value": "",
      "type": "bool",
      "required": false
    },
    "required": {
      "description": "If true, the input element is required. The prop defaults to the value (false) inherited from the parent FormControl component.",
      "description_zh": "如果为 true，则输入元素是必需的。prop 默认为从父 FormControl 组件继承的值 （false）。",
      "default": "-",
      "value": "",
      "type": "bool",
      "required": false
    },
    "rows": {
      "description": "Number of rows to display when multiline option is set to true.",
      "description_zh": "多行选项设置为 true 时显示的行数。",
      "default": "-",
      "value": "",
      "type": "number| string",
      "required": false
    },
    "slotProps": {
      "description": "The extra props for the slot components. You can override the existing props or add new ones.This prop is an alias for the componentsProps prop, which will be deprecated in the future.",
      "description_zh": "插槽组件的额外道具。您可以覆盖现有道具或添加新道具。此 prop 是 componentsProps props prop 的别名，将来将弃用。",
      "default": "{}",
      "value": "",
      "type": "{ input?: object, root?: object }",
      "required": false
    },
    "slots": {
      "description": "The components used for each slot inside.This prop is an alias for the components prop, which will be deprecated in the future.",
      "description_zh": "内部每个插槽使用的组件。此 prop 是组件 prop 的别名，将来将弃用。",
      "default": "{}",
      "value": "",
      "type": "{ input?: elementType, root?: elementType }",
      "required": false
    },
    "startAdornment": {
      "description": "Start InputAdornment for this component.",
      "description_zh": "启动此组件的 InputAdornment。",
      "default": "-",
      "value": "",
      "type": "node",
      "required": false
    },
    "sx": {
      "description": "The system prop that allows defining system overrides as well as additional CSS styles.See the `sx` page for more details.",
      "description_zh": "允许定义系统覆盖以及其他 CSS 样式的系统属性。有关更多详细信息，请参阅“sx”页面。",
      "default": "-",
      "value": "",
      "type": "Array<func| object| bool>| func| object",
      "required": false
    },
    "type": {
      "description": "Type of the input element. It should be a valid HTML5 input type.",
      "description_zh": "输入元素的类型。它应该是有效的 HTML5 输入类型。",
      "default": "text",
      "value": "",
      "type": "string",
      "required": false
    },
    "value": {
      "description": "The value of the input element, required for a controlled component.",
      "description_zh": "受控组件所需的输入元素的值。",
      "default": "-",
      "value": "",
      "type": "any",
      "required": false
    }
  },
  "link": "https://mui.com/material-ui/api/input/",
  "link_zh": "https://mui.com/material-ui/api/input/",
  "typeDetail": {},
  "events": [
    {
      "name": "onChange",
      "description": "Callback fired when the value is changed.Signature:event The event source of the callback. You can pull out the new value by accessing event.target.value (string).",
      "description_zh": "更改值时触发回调。Signature：event 回调的事件源。您可以通过访问 event.target.value（字符串）来提取新值。",
      "params": "function(event: React.ChangeEvent) => void",
      "value": ""
    }
  ],
  "methods": [],
  "slots": [],
  "suggestions": [],
  "filename": "Input"
}
