{
  "name": "Dialog",
  "props": {
    "open": {
      "description": "If true, the component is shown.",
      "description_zh": "如果为 true，则显示组件。",
      "default": "-",
      "value": "",
      "type": "bool",
      "required": true
    },
    "aria-describedby": {
      "description": "The id(s) of the element(s) that describe the dialog.",
      "description_zh": "描述对话框的元素的 ID。",
      "default": "-",
      "value": "",
      "type": "string",
      "required": false
    },
    "aria-labelledby": {
      "description": "The id(s) of the element(s) that label the dialog.",
      "description_zh": "标记对话框的元素的 ID。",
      "default": "-",
      "value": "",
      "type": "string",
      "required": false
    },
    "BackdropComponent": {
      "description": "A backdrop component. This prop enables custom backdrop rendering.Deprecated - Use slots.backdrop instead. While this prop currently works, it will be removed in the next major version.",
      "description_zh": "背景组件。此道具支持自定义背景渲染。已弃用 - 请改用 slots.backdrop。虽然这个道具目前有效，但它将在下一个主要版本中被删除。",
      "default": "styled(Backdrop, {\n  name: 'MuiModal',\n  slot: 'Backdrop',\n  overridesResolver: (props, styles) => {\n    return styles.backdrop;\n  },\n})({\n  zIndex: -1,\n})",
      "value": "",
      "type": "elementType",
      "required": false
    },
    "children": {
      "description": "Dialog children, usually the included sub-components.",
      "description_zh": "对话框子组件，通常是包含的子组件。",
      "default": "-",
      "value": "",
      "type": "node",
      "required": false
    },
    "classes": {
      "description": "Override or extend the styles applied to the component.See CSS classes API below for more details.",
      "description_zh": "覆盖或扩展应用于组件的样式。有关详细信息，请参阅下面的 CSS 类 API。",
      "default": "-",
      "value": "",
      "type": "object",
      "required": false
    },
    "disableEscapeKeyDown": {
      "description": "If true, hitting escape will not fire the onClose callback.",
      "description_zh": "如果为 true，则按 escape 不会触发 onClose 回调。",
      "default": "false",
      "value": "",
      "type": "bool",
      "required": false
    },
    "fullScreen": {
      "description": "If true, the dialog is full-screen.",
      "description_zh": "如果为 true，则对话框为全屏。",
      "default": "false",
      "value": "",
      "type": "bool",
      "required": false
    },
    "fullWidth": {
      "description": "If true, the dialog stretches to maxWidth.Notice that the dialog width grow is limited by the default margin.",
      "description_zh": "如果为 true，则对话框将拉伸到 maxWidth。请注意，对话框宽度增长受默认边距的限制。",
      "default": "false",
      "value": "",
      "type": "bool",
      "required": false
    },
    "maxWidth": {
      "description": "Determine the max-width of the dialog. The dialog width grows with the size of the screen. Set to false to disable maxWidth.",
      "description_zh": "确定对话框的最大宽度。对话框宽度随着屏幕大小的增加而增长。设置为 false 可禁用 maxWidth。",
      "default": "sm",
      "value": "",
      "type": "xs| sm| md| lg| xl| false| string",
      "required": false
    },
    "onBackdropClick": {
      "description": "Callback fired when the backdrop is clicked.Deprecated - Use the onClose prop with the reason argument to handle the backdropClick events.",
      "description_zh": "单击背景时触发回调。已弃用 - 使用带有 reason 参数的 onClose 属性来处理 backdropClick 事件。",
      "default": "-",
      "value": "",
      "type": "func",
      "required": false
    },
    "onClose": {
      "description": "Callback fired when the component requests to be closed.Signature:function(event: object, reason: string) => voidevent The event source of the callback.reason Can be: \"escapeKeyDown\", \"backdropClick\".",
      "description_zh": "当组件请求关闭时触发回调。Signature：function（event： object， reason： string） => voidevent callback.reason 的事件源可以是：“escapeKeyDown”、“backdropClick”。",
      "default": "-",
      "value": "",
      "type": "func",
      "required": false
    },
    "PaperComponent": {
      "description": "The component used to render the body of the dialog.",
      "description_zh": "用于呈现对话框正文的组件。",
      "default": "Paper",
      "value": "",
      "type": "elementType",
      "required": false
    },
    "PaperProps": {
      "description": "Props applied to the Paper element.",
      "description_zh": "应用于 Paper 元素的道具。",
      "default": "{}",
      "value": "",
      "type": "object",
      "required": false
    },
    "scroll": {
      "description": "Determine the container for scrolling the dialog.",
      "description_zh": "确定用于滚动对话框的容器。",
      "default": "paper",
      "value": "",
      "type": "body| paper",
      "required": false
    },
    "sx": {
      "description": "The system prop that allows defining system overrides as well as additional CSS styles.See the `sx` page for more details.",
      "description_zh": "允许定义系统覆盖以及其他 CSS 样式的系统属性。有关更多详细信息，请参阅“sx”页面。",
      "default": "-",
      "value": "",
      "type": "Array<func| object| bool>| func| object",
      "required": false
    },
    "TransitionComponent": {
      "description": "The component used for the transition. Follow this guide to learn more about the requirements for this component.",
      "description_zh": "用于过渡的组件。按照本指南了解有关此组件要求的详细信息。",
      "default": "Fade",
      "value": "",
      "type": "elementType",
      "required": false
    },
    "transitionDuration": {
      "description": "The duration for the transition, in milliseconds. You may specify a single timeout for all transitions, or individually with an object.",
      "description_zh": "转换的持续时间，以毫秒为单位。您可以为所有过渡指定单个超时，也可以单独指定一个对象超时。",
      "default": "{\n  enter: theme.transitions.duration.enteringScreen,\n  exit: theme.transitions.duration.leavingScreen,\n}",
      "value": "",
      "type": "number| { appear?: number, enter?: number, exit?: number }",
      "required": false
    },
    "TransitionProps": {
      "description": "Props applied to the transition element. By default, the element is based on this Transition component.",
      "description_zh": "应用于过渡元素的道具。默认情况下，该元素基于此 Transition 组件。",
      "default": "-",
      "value": "",
      "type": "object",
      "required": false
    }
  },
  "link": "https://mui.com/material-ui/api/dialog/",
  "link_zh": "https://mui.com/material-ui/api/dialog/",
  "typeDetail": {},
  "events": [
    {
      "name": "onBackdropClick",
      "description": "Callback fired when the backdrop is clicked.Deprecated - Use the  prop with the reason argument to handle the backdropClick events.",
      "description_zh": "单击背景时触发回调。已弃用 - 使用带有 reason 参数的 prop 来处理 backdropClick 事件。",
      "params": "onClose",
      "value": ""
    },
    {
      "name": "onClose",
      "description": "Callback fired when the component requests to be closed.Signature:event The event source of the callback.reason Can be: \"escapeKeyDown\", \"backdropClick\".",
      "description_zh": "当组件请求关闭时触发回调。Signature：event callback.reason 的事件源可以是：“escapeKeyDown”、“backdropClick”。",
      "params": "function(event: object, reason: string) => void",
      "value": ""
    }
  ],
  "methods": [],
  "slots": [],
  "suggestions": [],
  "filename": "Dialog"
}
