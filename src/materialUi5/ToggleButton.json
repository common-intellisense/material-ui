{
  "name": "ToggleButton",
  "props": {
    "value": {
      "description": "The value to associate with the button when selected in a ToggleButtonGroup.",
      "description_zh": "在 ToggleButtonGroup 中选择时要与按钮关联的值。",
      "default": "-",
      "value": "",
      "type": "any",
      "required": true
    },
    "children": {
      "description": "The content of the component.",
      "description_zh": "组件的内容。",
      "default": "-",
      "value": "",
      "type": "node",
      "required": false
    },
    "classes": {
      "description": "Override or extend the styles applied to the component.See CSS classes API below for more details.",
      "description_zh": "覆盖或扩展应用于组件的样式。有关详细信息，请参阅下面的 CSS 类 API。",
      "default": "-",
      "value": "",
      "type": "object",
      "required": false
    },
    "color": {
      "description": "The color of the button when it is in an active state. It supports both default and custom theme colors, which can be added as shown in the palette customization guide.",
      "description_zh": "按钮处于活动状态时的颜色。它支持默认和自定义主题颜色，可以按照调色板自定义指南中所示进行添加。",
      "default": "standard",
      "value": "",
      "type": "standard| primary| secondary| error| info| success| warning| string",
      "required": false
    },
    "disabled": {
      "description": "If true, the component is disabled.",
      "description_zh": "如果为 true，则禁用该组件。",
      "default": "false",
      "value": "",
      "type": "bool",
      "required": false
    },
    "disableFocusRipple": {
      "description": "If true, the  keyboard focus ripple is disabled.",
      "description_zh": "如果为 true，则禁用键盘焦点波纹。",
      "default": "false",
      "value": "",
      "type": "bool",
      "required": false
    },
    "disableRipple": {
      "description": "If true, the ripple effect is disabled.⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure to highlight the element by applying separate styles with the .Mui-focusVisible class.",
      "description_zh": "如果为 true，则禁用涟漪效应。 ⚠️ 如果没有涟漪，则默认情况下没有 ：focus-visible 的样式。请务必通过使用 应用单独的样式来突出显示元素。Mui-focusVisible 类。",
      "default": "false",
      "value": "",
      "type": "bool",
      "required": false
    },
    "fullWidth": {
      "description": "If true, the button will take up the full width of its container.",
      "description_zh": "如果为 true，则该按钮将占用其容器的整个宽度。",
      "default": "false",
      "value": "",
      "type": "bool",
      "required": false
    },
    "onChange": {
      "description": "Callback fired when the state changes.Signature:function(event: React.MouseEvent, value: any) => voidevent The event source of the callback.value of the selected button.",
      "description_zh": "当状态更改时触发回调。Signature：function（event： React.MouseEvent， value： any） => voidevent 所选按钮的 callback.value 的事件源。",
      "default": "-",
      "value": "",
      "type": "func",
      "required": false
    },
    "onClick": {
      "description": "Callback fired when the button is clicked.Signature:function(event: React.MouseEvent, value: any) => voidevent The event source of the callback.value of the selected button.",
      "description_zh": "单击按钮时触发回调。Signature：function（event： React.MouseEvent， value： any） => voidevent 所选按钮的 callback.value 的事件源。",
      "default": "-",
      "value": "",
      "type": "func",
      "required": false
    },
    "selected": {
      "description": "If true, the button is rendered in an active state.",
      "description_zh": "如果为 true，则按钮呈现为活动状态。",
      "default": "-",
      "value": "",
      "type": "bool",
      "required": false
    },
    "size": {
      "description": "The size of the component. The prop defaults to the value inherited from the parent ToggleButtonGroup component.",
      "description_zh": "组件的大小。该 prop 默认为从父 ToggleButtonGroup 组件继承的值。",
      "default": "medium",
      "value": "",
      "type": "small| medium| large| string",
      "required": false
    },
    "sx": {
      "description": "The system prop that allows defining system overrides as well as additional CSS styles.See the `sx` page for more details.",
      "description_zh": "允许定义系统覆盖以及其他 CSS 样式的系统属性。有关更多详细信息，请参阅“sx”页面。",
      "default": "-",
      "value": "",
      "type": "Array<func| object| bool>| func| object",
      "required": false
    }
  },
  "link": "https://mui.com/material-ui/api/toggle-button/",
  "link_zh": "https://mui.com/material-ui/api/toggle-button/",
  "typeDetail": {},
  "events": [
    {
      "name": "onChange",
      "description": "Callback fired when the state changes.Signature:event The event source of the callback.value of the selected button.",
      "description_zh": "当状态更改时触发回调。Signature：event 所选按钮的 callback.value 的事件源。",
      "params": "function(event: React.MouseEvent, value: any) => void",
      "value": ""
    },
    {
      "name": "onClick",
      "description": "Callback fired when the button is clicked.Signature:event The event source of the callback.value of the selected button.",
      "description_zh": "单击按钮时触发回调。Signature：event 所选按钮的 callback.value 的事件源。",
      "params": "function(event: React.MouseEvent, value: any) => void",
      "value": ""
    }
  ],
  "methods": [],
  "slots": [],
  "suggestions": [],
  "filename": "ToggleButton"
}
