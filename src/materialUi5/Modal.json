{
  "name": "Modal",
  "props": {
    "children": {
      "description": "A single child content element.This needs to be able to hold a ref.",
      "description_zh": "单个子内容元素。这需要能够保存一个 ref。",
      "default": "-",
      "value": "",
      "type": "element",
      "required": true
    },
    "open": {
      "description": "If true, the component is shown.",
      "description_zh": "如果为 true，则显示组件。",
      "default": "-",
      "value": "",
      "type": "bool",
      "required": true
    },
    "BackdropComponent": {
      "description": "A backdrop component. This prop enables custom backdrop rendering.Deprecated - Use slots.backdrop instead. While this prop currently works, it will be removed in the next major version.",
      "description_zh": "背景组件。此道具支持自定义背景渲染。已弃用 - 请改用 slots.backdrop。虽然这个道具目前有效，但它将在下一个主要版本中被删除。",
      "default": "styled(Backdrop, {\n  name: 'MuiModal',\n  slot: 'Backdrop',\n  overridesResolver: (props, styles) => {\n    return styles.backdrop;\n  },\n})({\n  zIndex: -1,\n})",
      "value": "",
      "type": "elementType",
      "required": false
    },
    "BackdropProps": {
      "description": "Props applied to the Backdrop element.Deprecated - Use slotProps.backdrop instead.",
      "description_zh": "应用于 Backdrop 元素的道具。已弃用 - 请改用 slotProps.backdrop。",
      "default": "-",
      "value": "",
      "type": "object",
      "required": false
    },
    "classes": {
      "description": "Override or extend the styles applied to the component.See CSS classes API below for more details.",
      "description_zh": "覆盖或扩展应用于组件的样式。有关详细信息，请参阅下面的 CSS 类 API。",
      "default": "-",
      "value": "",
      "type": "object",
      "required": false
    },
    "closeAfterTransition": {
      "description": "When set to true the Modal waits until a nested Transition is completed before closing.",
      "description_zh": "当设置为 true 时，模态将等待嵌套过渡完成后再关闭。",
      "default": "false",
      "value": "",
      "type": "bool",
      "required": false
    },
    "component": {
      "description": "The component used for the root node. Either a string to use a HTML element or a component.",
      "description_zh": "用于根节点的组件。使用 HTML 元素或组件的字符串。",
      "default": "-",
      "value": "",
      "type": "elementType",
      "required": false
    },
    "components": {
      "description": "The components used for each slot inside.This prop is an alias for the slots prop. It's recommended to use the slots prop instead.",
      "description_zh": "内部每个插槽使用的组件。此道具是插槽道具的别名。建议改用插槽道具。",
      "default": "{}",
      "value": "",
      "type": "{ Backdrop?: elementType, Root?: elementType }",
      "required": false
    },
    "componentsProps": {
      "description": "The extra props for the slot components. You can override the existing props or add new ones.This prop is an alias for the slotProps prop. It's recommended to use the slotProps prop instead, as componentsProps will be deprecated in the future.",
      "description_zh": "插槽组件的额外道具。您可以覆盖现有道具或添加新道具。此 prop 是 slotProps props 的别名。建议改用 slotProps prop，因为 componentsProps 将来会被弃用。",
      "default": "{}",
      "value": "",
      "type": "{ backdrop?: func| object, root?: func| object }",
      "required": false
    },
    "container": {
      "description": "An HTML element or function that returns one. The container will have the portal children appended to it.You can also provide a callback, which is called in a React layout effect. This lets you set the container from a ref, and also makes server-side rendering possible.By default, it uses the body of the top-level document object, so it's simply document.body most of the time.",
      "description_zh": "一个 HTML 元素或函数，返回一个。容器将附加门户子项。您还可以提供回调，该回调在 React 布局效果中调用。这允许您从 ref 设置容器，并且还可以进行服务器端渲染。默认情况下，它使用顶级文档对象的正文，因此大多数时候它只是 document.body。",
      "default": "-",
      "value": "",
      "type": "HTML element| func",
      "required": false
    },
    "disableAutoFocus": {
      "description": "If true, the modal will not automatically shift focus to itself when it opens, and replace it to the last focused element when it closes. This also works correctly with any modal children that have the disableAutoFocus prop.Generally this should never be set to true as it makes the modal less accessible to assistive technologies, like screen readers.",
      "description_zh": "如果为 true，则模态在打开时不会自动将焦点转移到自身，并在关闭时将其替换为最后一个焦点元素。这也适用于任何具有 disableAutoFocus 道具的模态子级。通常，这绝不应设置为 true，因为它会使辅助技术（如屏幕阅读器）更难访问模态。",
      "default": "false",
      "value": "",
      "type": "bool",
      "required": false
    },
    "disableEnforceFocus": {
      "description": "If true, the modal will not prevent focus from leaving the modal while open.Generally this should never be set to true as it makes the modal less accessible to assistive technologies, like screen readers.",
      "description_zh": "如果为 true，则模态不会阻止焦点在打开时离开模态。通常，这绝不应设置为 true，因为它会使辅助技术（如屏幕阅读器）更难访问模态。",
      "default": "false",
      "value": "",
      "type": "bool",
      "required": false
    },
    "disableEscapeKeyDown": {
      "description": "If true, hitting escape will not fire the onClose callback.",
      "description_zh": "如果为 true，则按 escape 不会触发 onClose 回调。",
      "default": "false",
      "value": "",
      "type": "bool",
      "required": false
    },
    "disablePortal": {
      "description": "The children will be under the DOM hierarchy of the parent component.",
      "description_zh": "子组件将位于父组件的 DOM 层次结构下。",
      "default": "false",
      "value": "",
      "type": "bool",
      "required": false
    },
    "disableRestoreFocus": {
      "description": "If true, the modal will not restore focus to previously focused element once modal is hidden or unmounted.",
      "description_zh": "如果为 true，则在隐藏或卸载模态后，模态不会将焦点恢复到先前聚焦的元素。",
      "default": "false",
      "value": "",
      "type": "bool",
      "required": false
    },
    "disableScrollLock": {
      "description": "Disable the scroll lock behavior.",
      "description_zh": "禁用滚动锁定行为。",
      "default": "false",
      "value": "",
      "type": "bool",
      "required": false
    },
    "hideBackdrop": {
      "description": "If true, the backdrop is not rendered.",
      "description_zh": "如果为 true，则不渲染背景。",
      "default": "false",
      "value": "",
      "type": "bool",
      "required": false
    },
    "keepMounted": {
      "description": "Always keep the children in the DOM. This prop can be useful in SEO situation or when you want to maximize the responsiveness of the Modal.",
      "description_zh": "始终将孩子留在 DOM 中。这个道具在SEO情况下很有用，或者当你想最大限度地提高模态的响应能力时。",
      "default": "false",
      "value": "",
      "type": "bool",
      "required": false
    },
    "onBackdropClick": {
      "description": "Callback fired when the backdrop is clicked.Deprecated - Use the onClose prop with the reason argument to handle the backdropClick events.",
      "description_zh": "单击背景时触发回调。已弃用 - 使用带有 reason 参数的 onClose 属性来处理 backdropClick 事件。",
      "default": "-",
      "value": "",
      "type": "func",
      "required": false
    },
    "onClose": {
      "description": "Callback fired when the component requests to be closed. The reason parameter can optionally be used to control the response to onClose.Signature:function(event: object, reason: string) => voidevent The event source of the callback.reason Can be: \"escapeKeyDown\", \"backdropClick\".",
      "description_zh": "当组件请求关闭时触发回调。可以选择使用 reason 参数来控制对 onClose.Signature：function（event： object， reason： string） => voidevent callback.reason 的事件源可以是：“escapeKeyDown”、“backdropClick”。",
      "default": "-",
      "value": "",
      "type": "func",
      "required": false
    },
    "onTransitionEnter": {
      "description": "A function called when a transition enters.",
      "description_zh": "进入转换时调用的函数。",
      "default": "-",
      "value": "",
      "type": "func",
      "required": false
    },
    "onTransitionExited": {
      "description": "A function called when a transition has exited.",
      "description_zh": "在转换退出时调用的函数。",
      "default": "-",
      "value": "",
      "type": "func",
      "required": false
    },
    "slotProps": {
      "description": "The props used for each slot inside the Modal.",
      "description_zh": "模态内每个插槽使用的道具。",
      "default": "{}",
      "value": "",
      "type": "{ backdrop?: func| object, root?: func| object }",
      "required": false
    },
    "slots": {
      "description": "The components used for each slot inside the Modal. Either a string to use a HTML element or a component.",
      "description_zh": "用于模态内每个插槽的组件。使用 HTML 元素或组件的字符串。",
      "default": "{}",
      "value": "",
      "type": "{ backdrop?: elementType, root?: elementType }",
      "required": false
    },
    "sx": {
      "description": "The system prop that allows defining system overrides as well as additional CSS styles.See the `sx` page for more details.",
      "description_zh": "允许定义系统覆盖以及其他 CSS 样式的系统属性。有关更多详细信息，请参阅“sx”页面。",
      "default": "-",
      "value": "",
      "type": "Array<func| object| bool>| func| object",
      "required": false
    }
  },
  "link": "https://mui.com/material-ui/api/modal/",
  "link_zh": "https://mui.com/material-ui/api/modal/",
  "typeDetail": {},
  "events": [
    {
      "name": "onBackdropClick",
      "description": "Callback fired when the backdrop is clicked.Deprecated - Use the  prop with the reason argument to handle the backdropClick events.",
      "description_zh": "单击背景时触发回调。已弃用 - 使用带有 reason 参数的 prop 来处理 backdropClick 事件。",
      "params": "onClose",
      "value": ""
    },
    {
      "name": "onClose",
      "description": "Callback fired when the component requests to be closed. The  parameter can optionally be used to control the response to onClose.Signature:function(event: object, reason: string) => voidevent The event source of the callback.reason Can be: \"escapeKeyDown\", \"backdropClick\".",
      "description_zh": "当组件请求关闭时触发回调。该参数可以选择用于控制对 onClose.Signature：function（event： object， reason： string） =>voidevent callback.reason 的事件源可以是：“escapeKeyDown”、“backdropClick”。",
      "params": "reason",
      "value": ""
    },
    {
      "name": "onTransitionEnter",
      "description": "A function called when a transition enters.",
      "description_zh": "进入转换时调用的函数。",
      "value": ""
    },
    {
      "name": "onTransitionExited",
      "description": "A function called when a transition has exited.",
      "description_zh": "在转换退出时调用的函数。",
      "value": ""
    }
  ],
  "methods": [],
  "slots": [],
  "suggestions": [],
  "filename": "Modal"
}
